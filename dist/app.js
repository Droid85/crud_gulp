const ENVIRONMENT={USERS:{getUsers:"users/"}};class HTTP{static#API="https://jsonplaceholder.typicode.com/";get(t){return fetch(HTTP.#API+t)}delete(t,e){return fetch(HTTP.#API+t+e,{method:"DELETE"})}edit(t,e,s){return fetch(HTTP.#API+t+e,{method:"PUT",body:JSON.stringify(s),headers:{"Content-type":"application/json; charset=UTF-8"}})}create(t,e){return fetch(HTTP.#API+t,{method:"POST",body:JSON.stringify(e),headers:{"Content-type":"application/json; charset=UTF-8"}})}}class RENDEREL{containerEl=document.querySelector("#users");createBtnEl=document.querySelector("#create-btn");popUpEl=document.querySelector("#pop-up-bg");formEl=document.querySelector("#form");userInputEl=document.querySelector(".form-input");okBtnEl=document.querySelector(".agree-btn");blockEl="div";paragraphEl="p";btnEl="button";blockClass="user-block";paragraphClass="user-paragraph";btnClass="user-btn";btnDeleteClass="delete-btn";btnEditClass="edit-btn";editBtnTxt="Edit user";deleteBtnText="Delete user";showUsers(t,e){this.containerEl.insertAdjacentHTML("beforeend",`
            <${this.blockEl} class = "${this.blockClass}" id = "${e}">
            <${this.paragraphEl} class = "${this.paragraphClass}">${t}</${this.paragraphEl}>
            <${this.btnEl} class = "${this.btnClass} ${this.btnEditClass}">${this.editBtnTxt}</${this.btnEl}>
            <${this.btnEl} class = "${this.btnClass} ${this.btnDeleteClass}">${this.deleteBtnText}</${this.btnEl}>
            </${this.blockEl}>`)}popUpOn(){this.popUpEl.classList.add("activePopUp"),this.createBtnEl.classList.add("active-add-btn")}popUpOff(){this.userInputEl.value="",this.createBtnEl.classList.remove("active-add-btn"),this.popUpEl.classList.remove("activePopUp")}clearForm(){this.formEl.innerHTML=""}}function init(){const s=new HTTP,n=new RENDEREL;let l={};n.containerEl.addEventListener("click",function(e){var t=e.target.parentNode.id;e.target.classList.contains("delete-btn")?s.delete(ENVIRONMENT.USERS.getUsers,t).then(t=>{e.target.parentNode.remove(),console.log(t)}).catch(t=>console.log("DELETE ERROR",t)):e.target.classList.contains("edit-btn")&&(n.popUpOn(),n.okBtnEl.id="edit-btn-ok",s.get(ENVIRONMENT.USERS.getUsers+t).then(t=>t.json()).then(t=>{l=t,n.userInputEl.value=l.name}).catch(t=>console.log("EDIT ERROR",t)))}),n.createBtnEl.addEventListener("click",function(t){t.target.classList.contains("add-btn")&&(n.popUpOn(),n.okBtnEl.id="add-btn-ok")}),n.popUpEl.addEventListener("click",function(t){if("add-btn-ok"===t.target.id){if(n.userInputEl.value){let t={id:Math.random()};t.name=n.userInputEl.value,s.create(ENVIRONMENT.USERS.getUsers,t).then(t=>console.log(t)).catch(t=>console.log("CREATE ERROR",t)),n.showUsers(t.name),n.popUpOff()}}else if(t.target.classList.contains("discard-btn"))n.popUpOff();else if("edit-btn-ok"===t.target.id){l.name=n.userInputEl.value;let t=document.getElementById(l.id);t.firstElementChild.textContent=n.userInputEl.value,s.edit(ENVIRONMENT.USERS.getUsers,l.id,l).then(t=>console.log(t)).catch(t=>console.log("EDIT ERROR",t)),n.popUpOff()}}),s.get(ENVIRONMENT.USERS.getUsers).then(t=>t.json()).then(t=>(t.forEach(t=>{n.showUsers(t.name,t.id)}),t)).catch(t=>console.log("USERS ERROR",t))}init();